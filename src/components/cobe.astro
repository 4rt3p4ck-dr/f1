---
const globeMaxSize = 500;
---

<canvas id="cobe" width={globeMaxSize} height={globeMaxSize} class="dark:opacity-100"></canvas>

<script define:vars={{ globeMaxSize }} type="module">
	import createGlobe from "https://cdn.skypack.dev/cobe";

	let canvas = document.getElementById("cobe");
	let globeSize = computeGlobeSize(globeMaxSize);

	canvas.width = globeSize;
	canvas.height = globeSize;

	let phi = 0;
	let currentPhi = 0;
	let currentTheta = 0;
	const doublePi = Math.PI * 2;
	const focusRef = { current: [0, 0] };
	const markers = [
		{ location: [-37.8497, 144.9680], size: 0.05 },
		{ location: [31.3389, 121.2220], size: 0.05 },
		{ location: [34.8431, 136.5410], size: 0.05 },
		{ location: [26.0325, 50.5106], size: 0.05 },
		{ location: [21.6319, 39.1044], size: 0.05 },
		{ location: [25.9580, -80.2389], size: 0.05 },
		{ location: [44.3439, 11.7167], size: 0.05 },
		{ location: [43.7347, 7.4206], size: 0.05 },
		{ location: [41.5700, 2.2611], size: 0.05 },
		{ location: [45.5005, -73.5221], size: 0.05 },
		{ location: [47.2197, 14.7647], size: 0.05 },
		{ location: [52.0786, -1.0169], size: 0.05 },
		{ location: [50.4372, 5.9714], size: 0.05 },
		{ location: [47.5789, 19.2486], size: 0.05 },
		{ location: [52.3888, 4.5409], size: 0.05 },
		{ location: [45.6156, 9.2811], size: 0.05 },
		{ location: [40.3725, 49.8533], size: 0.05 },
		{ location: [1.2914, 103.8644], size: 0.05 },
		{ location: [30.1328, -97.6411], size: 0.05 },
		{ location: [19.4042, -99.0907], size: 0.05 },
		{ location: [-23.7036, -46.6997], size: 0.05 },
		{ location: [36.1147, -115.1698], size: 0.05 },
		{ location: [25.4903, 51.4542], size: 0.05 },
		{ location: [24.4672, 54.6031], size: 0.05 }
	];

	function computeGlobeSize(globeMaxSize) {
		let size = globeMaxSize;
		const { innerWidth: width } = window;
		if (width < globeMaxSize) {
			size = width - 300;
		}
		return size;
	}

	function locationToAngles(lat, long) {
		return [Math.PI - ((long * Math.PI) / 180 - Math.PI / 2), (lat * Math.PI) / 180];
	}

	function addGlobe(canvas) {
		const globe = createGlobe(canvas, {
			width: globeSize,
			height: globeSize,
			phi: 0,
			theta: 0,
			dark: 1,
			diffuse: 1.5,
			scale: 1,
			mapSamples: 25000,
			mapBrightness: 12,
			baseColor: [0.3, 0.3, 0.3],
			markerColor: [1, 0.1, 0],
			glowColor: [1, 0.1, 0],
			offset: [0, 0],
			opacity: 0.5,
			markers: markers,
			onRender: (state) => {
				state.phi = currentPhi;
				state.theta = currentTheta;
				const [focusPhi, focusTheta] = focusRef.current;
				const distPositive = (focusPhi - currentPhi + doublePi) % doublePi;
				const distNegative = (currentPhi - focusPhi + doublePi) % doublePi;
				if (distPositive < distNegative) {
					currentPhi += distPositive * 0.08;
				} else {
					currentPhi -= distNegative * 0.08;
				}
				currentTheta = currentTheta * 0.92 + focusTheta * 0.08;
				state.width = globeSize;
				state.height = globeSize;
			},
		});

		return globe;
	}

	addGlobe(canvas);

	let currentMarkerIndex = 0;
	setInterval(() => {
		const marker = markers[currentMarkerIndex];
		focusRef.current = locationToAngles(marker.location[0], marker.location[1]);
		currentMarkerIndex = (currentMarkerIndex + 1) % markers.length;
	}, 3000);

	// Update the globe dimensions when the window is resized
	window.addEventListener("resize", () => {
		let globeSize = computeGlobeSize(globeMaxSize);
		canvas.width = globeSize;
		canvas.height = globeSize;
	});
</script>

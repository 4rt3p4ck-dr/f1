---
import i18next, { changeLanguage } from "i18next";
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import { Icon } from "astro-icon";
import { localizePath } from "astro-i18next";
import { getArticleReadingTime } from "@utils/blog";

changeLanguage("en");

// Generate a new path for every collection entry
export async function getStaticPaths() {changeLanguage('en')
    const blogEntries = await getCollection("blog");
    return blogEntries.map((entry) => {
        let slug = entry.slug;
        if (i18next.language == "en" && slug.startsWith("en/")) {
            slug = slug.substring(3);
        }
        return {
            params: { blog: slug },
            props: { entry, lang: i18next.language },
        };
    });
}
// Get the entry directly from the prop on render
const { entry, lang } = Astro.props;
const { Content } = await entry.render();
const readTime  = getArticleReadingTime(entry.body);
---

<Layout title={entry.data.title} lang={lang}>
  <Container>
    <div class="mx-auto prose prose-lg mt-14">
      <a href={localizePath(`/category/${entry.data.category?.toLowerCase()}`)} class="text-blue-400 uppercase tracking-wider text-sm font-medium no-underline">
        {entry.data.category}
      </a>
      <h1 class="text-4xl mb-3 lg:text-5xl font-bold lg:tracking-tight mt-1 lg:leading-tight">
        {entry.data.title}
      </h1>
	  <div class="flex gap-2 items-center">
		<div class="w-full md:w-auto flex flex-wrap gap-3">
			{
			  entry.data.tags.map((tag) => (
				<a href={localizePath(`/tag/${tag}`)} class="text-sm text-gray-500">
				  #{tag}
				</a>
			  ))
			}
		  </div>
	  </div>
      <div class="flex gap-2 mt-4 items-center flex-wrap md:flex-nowrap">
        <span class="text-gray-400">
          {entry.data.author}
        </span>
        <span class="text-gray-400">•</span>
		<span class="text-gray-400">
			{readTime} min
		  </span>
        <span class="text-gray-400">•</span>
        <time class="text-gray-400" datetime={entry.data.publishDate.toISOString()}>
          {entry.data.publishDate.toDateString()}
        </time>
      </div>
    </div>

    <div class="mx-auto prose prose-lg mt-6">
      <Content />
    </div>
    <div class="mx-auto mt-20">
      <a href={localizePath("/blog")}>
        <div class="flex flex-row align-middle justify-center">
          <Icon name="tabler:chevron-left" class="w-6 h-6" />
          <p class="ml-2">Back to blog</p>
        </div>
      </a>
    </div>
    <div class="mx-auto prose prose-lg mt-20">
      <script
        src="https://giscus.app/client.js"
        data-repo="zk-g/astroship"
        data-repo-id="R_kgDOJCevvQ"
        data-category="Blog"
        data-category-id="DIC_kwDOJCevvc4CU0R7"
        data-mapping="pathname"
        data-strict="0"
        data-reactions-enabled="1"
        data-emit-metadata="0"
        data-input-position="top"
        data-theme="light"
        data-lang="en"
        data-loading="lazy"
        crossorigin="anonymous"
        async></script>
    </div>
  </Container>
</Layout>
